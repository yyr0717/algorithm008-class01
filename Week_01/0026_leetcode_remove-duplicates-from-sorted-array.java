//leetcode 26. 删除排序数组中的重复项
//题目：给定一个排序数组，你需要在 原地 删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。
//思路： 双指针i，j，前后两个元素比较，出现相同时，j快指针直接跳过，将下一个不同的元素替代i+1位置上的元素
//时间复杂度：O(n)，假设数组的长度是 n，那么 i 和 j分别最多遍历 n 步。
//空间复杂度：O(1)
//备注：返回数值是整数，但输出的答案是数组。输入数组是以「引用」方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。
//根据你的函数返回的长度, 它会打印出数组中该长度范围内的所有元素。


class Solution {
    public int removeDuplicates(int[] nums) {
        if(nums.length == 0) return 0;
        int i = 0;
        for(int j = 1; j < nums.length; j++){
            if(nums[i] != nums[j]){
                i++;
                nums[i] = nums[j];
            }
    }
    return i + 1;
}
}
